{"version":3,"file":"static/js/785.4ce80b9b.chunk.js","mappings":"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","sources":["redux/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter;\nexport const selectError = state => state.contacts.error;\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  \n  (contacts, filter) => {\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n`;\n\nexport const Input = styled.input`\n  padding: 10px;\n  margin-bottom: 10px;\n  border-radius: 6px;\n  border: none;\n  width: 300px;\n  outline: 0;\n  background-color: #fff;\n  box-shadow: 0 1px 6px 0 #20212447;\n`;\n\nexport const Button = styled.button`\n  margin-top: 5px;\n  font-size: 18px;\n  border-radius: 6px;\n  border: 1px solid;\n  background-color: #49796B;\n  color: white;\n  :hover {\n    background-color: #29AB87;\n    color: black;\n    border: 0px;\n  }\n`;\n\nexport const Text = styled.p`\n  /* padding: 10px 20px; */\n  margin-bottom: 15px;\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/operations';\nimport Notiflix from 'notiflix';\nimport { selectContacts } from 'redux/selectors';\nimport { Form, Input, Text, Button } from './ContactForm.styled';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const contact = {\n      name: name,\n      number: number,\n    };\n\n    const isContactExist = contacts.find(\n      ({ name }) => name.toLowerCase() === contact.name.toLowerCase()\n    );\n\n    if (isContactExist) {\n      Notiflix.Report.warning(\n        'Alert',\n        `Contact with name ${contact.name} already exists!`,\n        'Ok'\n      );\n      return;\n    }\n\n    const isNumberExist = contacts.find(\n      ({ number }) =>\n        contact.number.replace(/\\D/g, '') === number.replace(/\\D/g, '')\n    );\n\n    if (isNumberExist) {\n      Notiflix.Report.warning(\n        'Alert',\n        `Number ${contact.number} is already in contacts!`,\n        'Ok'\n      );\n      return;\n    }\n\n    dispatch(addContact(contact));\n    setName('');\n    setNumber('');\n  };\n\n  const handleNameChange = event => {\n    setName(event.target.value);\n  };\n\n  const handleNumberChange = event => {\n    setNumber(event.target.value);\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Text>Name</Text>\n      <Input\n        type=\"text\"\n        name=\"name\"\n        placeholder=\"Enter name\"\n        value={name}\n        onChange={handleNameChange}\n        required\n      />\n\n      <Text>Number</Text>\n      <Input\n        type=\"tel\"\n        name=\"number\"\n        placeholder=\"Enter phone number\"\n        value={number}\n        onChange={handleNumberChange}\n        required\n      />\n\n      <Button type=\"submit\">\n        Add number\n      </Button>\n    </Form>\n  );\n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const ContactItems = styled.li`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  margin-bottom: 10px;\n  background-color: #f5f6f7;\n  padding-left: 10px;\n  border-radius: 7px;\n`;\n\nexport const ContactName = styled.span`\n  margin-right: 10px;\n`;\n\nexport const ContactNumber = styled.a`\n  cursor: pointer;\n  color: #1677ff;\n  :hover {\n    text-decoration: underline;\n  }\n`;\n\nexport const Btn = styled.button`\n  @media only screen and (max-width: 600px) {\n    margin-right: 10px;\n  }\n  padding: 3px 10px 0 10px;\n  margin-left: 5px;\n  font-size: 14px;\n  border-radius: 6px;\n  border: 1px solid;\n   background-color: #49796B;\n  color: white;\n  :hover {\n    background-color: #29AB87;\n    color: black;\n    border: 0px;\n  }\n`;\n\nexport const BtnEdit = styled.button`\n  padding: 3px 10px 0 10px;\n  margin-left: 20px;\n  font-size: 14px;\n  border-radius: 6px;\n  border: 1px solid;\n  background-color: #49796B;\n  color: white;\n  :hover {\n    background-color: #29AB87;\n    color: black;\n    border: 0px;\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { deleteContact, editContatc } from 'redux/operations';\nimport { Modal, Input, Button, Popconfirm } from 'antd';\nimport {\n  ContactItems,\n  ContactName,\n  ContactNumber,\n  Btn,\n  BtnEdit,\n} from './ContactItem.styled';\n\nfunction ContactItem({ contact }) {\n  const dispatch = useDispatch();\n  const [showModal, setShowModal] = useState(false);\n  const [newName, setNewName] = useState(contact.name);\n  const [newNumber, setNewNumber] = useState(contact.number);\n\n  const confirm = e => {\n    handleDelete(e.target.value);\n  };\n  const cancel = e => {\n    console.log(e);\n  };\n\n  const handleDelete = () => {\n    dispatch(deleteContact(contact.id));\n  };\n\n  const handleEdit = () => {\n    setShowModal(true);\n  };\n\n  const handleSave = () => {\n    setShowModal(false);\n    dispatch(editContatc({ id: contact.id, name: newName, number: newNumber }));\n  };\n\n  const handleCancel = () => {\n    setShowModal(false);\n  };\n\n  const handleNameChange = e => {\n    setNewName(e.target.value);\n  };\n\n  const handleNumberChange = e => {\n    setNewNumber(e.target.value);\n  };\n\n  return (\n    <ContactItems>\n      <ContactName>{contact.name}</ContactName>\n      <ContactNumber href={`tel:${contact.number}`}>\n        {contact.number}\n      </ContactNumber>\n      <BtnEdit onClick={handleEdit}>\n       Edit\n      </BtnEdit>\n      <Popconfirm\n        title=\"Delete the contact\"\n        description=\"This contacts will be deleted permanently. Are tou sure youy want to delete it?\"\n        onConfirm={confirm}\n        onCancel={cancel}\n        okText=\"Yes\"\n        cancelText=\"No\"\n      >\n        <Btn danger>\n          Delete\n        </Btn>\n      </Popconfirm>\n\n      <Modal\n        open={showModal}\n        onCancel={handleCancel}\n        footer={[\n          <Button key=\"cancel\" onClick={handleCancel}>\n            Cancel\n          </Button>,\n          <Button key=\"save\" onClick={handleSave}>\n            Save\n          </Button>,\n        ]}\n      >\n        <div className=\"modal-content\">\n          <label>New Name:</label>\n          <Input\n            type=\"text\"\n            value={newName}\n            onChange={handleNameChange}\n            required\n          />\n          <label>New Number:</label>\n          <Input\n            type=\"text\"\n            value={newNumber}\n            onChange={handleNumberChange}\n            required\n          />\n        </div>\n      </Modal>\n    </ContactItems>\n  );\n}\n\nContactItem.propTypes = {\n  contact: PropTypes.object.isRequired,\n};\n\nexport default ContactItem;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { Empty } from 'antd';\nimport {\n  selectFilteredContacts,\n  selectError,\n  selectIsLoading,\n} from 'redux/selectors';\nimport { Loader } from '../Loader/Loader';\nimport { fetchContacts } from 'redux/operations';\nimport ContactItem from '../ContactItem/ContactItem';\n\nfunction ContactList() {\n  const filteredContacts = useSelector(selectFilteredContacts);\n  const error = useSelector(selectError);\n  const isLoading = useSelector(selectIsLoading);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ul>\n      {isLoading && !error ?(\n        <Loader />\n      ) : filteredContacts.length === 0 && !error ? (\n        <Empty />\n      ) : (\n        filteredContacts.map(({ id, name, number }) => (\n          <ContactItem key={id} contact={{ id, name, number }} />\n        ))\n      )}\n    </ul>\n  );\n}\n\nexport default ContactList;\n","import styled from 'styled-components';\nimport { Input } from 'antd';\n\nexport const InputStyles = styled(Input)`\n  width: auto;\n  padding: 10px;\n  border-radius: 6px;\n  border: none;\n  outline: 0;\n  background-color: #fff;\n  box-shadow: 0 1px 6px 0 #20212447;\n`;\n\nexport const Title = styled.h3`\n  color: #2e2d2dbc;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { FcSearch } from 'react-icons/fc';\nimport { selectContacts, selectFilter } from 'redux/selectors';\nimport { setFilter } from 'redux/filterSlice';\nimport { InputStyles, Title } from './Filter.styled';\n\nfunction Filter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const handleFilterChange = event => {\n    dispatch(setFilter(event.target.value.trim()));\n  };\n\n  return useSelector(selectContacts).length < 1 ? (\n    <Title>Add your first contact</Title>\n  ) : (\n    <InputStyles\n      type=\"text\"\n      name=\"filter\"\n      placeholder=\"Search\"\n      value={filter}\n      onChange={handleFilterChange}\n      prefix={<FcSearch />}\n    />\n  );\n}\n\nexport default Filter;\n","import { Helmet, HelmetProvider } from 'react-helmet-async';\n\nimport ContactForm from '../components/ContactForm/ContactForm';\nimport ContactList from '../components/ContactList/ContactList';\nimport Filter from '../components/Filter/Filter';\n\nfunction Contacts() {\n  return (\n    <>\n      <HelmetProvider>\n        <Helmet>\n          <title>Phonebook</title>\n        </Helmet>\n        <ContactForm />\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </HelmetProvider>\n    </>\n  );\n}\n\nexport default Contacts;\n"],"names":["selectContacts","state","contacts","items","selectFilter","filter","selectError","error","selectIsLoading","isLoading","selectFilteredContacts","createSelector","name","toLowerCase","includes","Form","styled","Input","Button","Text","dispatch","useDispatch","useSelector","useState","setName","number","setNumber","onSubmit","event","preventDefault","contact","find","Notiflix","isNumberExist","replace","addContact","type","placeholder","value","onChange","target","required","ContactItems","ContactName","ContactNumber","Btn","BtnEdit","showModal","setShowModal","newName","setNewName","newNumber","setNewNumber","handleDelete","deleteContact","id","handleCancel","href","onClick","title","description","onConfirm","e","onCancel","console","log","okText","cancelText","danger","open","footer","editContatc","className","filteredContacts","useEffect","fetchContacts","Loader","length","map","InputStyles","Title","setFilter","trim","prefix"],"sourceRoot":""}